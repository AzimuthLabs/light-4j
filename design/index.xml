<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Designs on Light Java - The fastest Java API Framework</title>
    <link>https://networknt.github.io/light-java/design/index.xml</link>
    <description>Recent content in Designs on Light Java - The fastest Java API Framework</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Thu, 09 Feb 2017 12:45:22 -0500</lastBuildDate>
    <atom:link href="https://networknt.github.io/light-java/design/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>monojee</title>
      <link>https://networknt.github.io/light-java/design/monojee/</link>
      <pubDate>Thu, 09 Feb 2017 12:45:22 -0500</pubDate>
      
      <guid>https://networknt.github.io/light-java/design/monojee/</guid>
      <description></description>
    </item>
    
    <item>
      <title>newprod</title>
      <link>https://networknt.github.io/light-java/design/newprod/</link>
      <pubDate>Thu, 09 Feb 2017 12:45:08 -0500</pubDate>
      
      <guid>https://networknt.github.io/light-java/design/newprod/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Convert WebServices to Microservices</title>
      <link>https://networknt.github.io/light-java/design/convtws/</link>
      <pubDate>Thu, 09 Feb 2017 10:59:44 -0500</pubDate>
      
      <guid>https://networknt.github.io/light-java/design/convtws/</guid>
      <description>&lt;p&gt;While you are talking about microservices, chances are you existing application
is built as web services. These days a lot of people and vendors are calling
these web services as microservices and it is not right.&lt;/p&gt;

&lt;p&gt;The following diagram shows what is the difference between web service
and microservices.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://networknt.github.io/light-java/images/web_micro_service.jpeg&#34; alt=&#34;web_micro_service&#34; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see the traditional web servers are flattened behind an API gateway
and they are normally build on top of Java EE platform with JAXRS 1.1 or 2.0&lt;/p&gt;

&lt;p&gt;In essence, each web service is still a big monolithic Java EE application and
does everything in a war or ear file. Although they expose RESTful API but they
are not microservices.&lt;/p&gt;

&lt;p&gt;On the right side, the same payment API is broken up to microservices and the
payment API in the picture acts as a facade API which has static ip address and
can be accessed from F5 (or other reverse proxy and load balancer) directly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Design</title>
      <link>https://networknt.github.io/light-java/design/</link>
      <pubDate>Thu, 09 Feb 2017 10:57:47 -0500</pubDate>
      
      <guid>https://networknt.github.io/light-java/design/</guid>
      <description>&lt;p&gt;light-java is aiming microservices and design of microservices is more art other
than technique. When you break a business application to smaller pieces, there
is a threshold. If it too fine-grained, then the performance will suffer, but
if it is too coarse-grained, then the benefit of microservices will be diminishing.&lt;/p&gt;

&lt;p&gt;The big portion of design work for microservices is to functionally divide an
application to multiple services and define the communication contract between
these services with OpenAPI specifications.&lt;/p&gt;

&lt;p&gt;Here is a list of design decisions for microservices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://networknt.github.io/light-java/design/convtws/&#34;&gt;How to convert existing RESTful web services to microservices&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://networknt.github.io/light-java/design/newprod/&#34;&gt;How to design microservices for brand new project/product&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://networknt.github.io/light-java/design/monojee/&#34;&gt;How to replace monolithic Java EE application to microservices&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>