<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Light 4J - A fast, lightweight Java microservices framework</title>
    <link>https://networknt.github.io/light-4j/devops/</link>
    <description>Recent content in Devops on Light 4J - A fast, lightweight Java microservices framework</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Wed, 25 Jan 2017 20:55:53 -0500</lastBuildDate>
    
	<atom:link href="https://networknt.github.io/light-4j/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DevOps</title>
      <link>https://networknt.github.io/light-4j/devops/</link>
      <pubDate>Wed, 25 Jan 2017 20:55:53 -0500</pubDate>
      
      <guid>https://networknt.github.io/light-4j/devops/</guid>
      <description> How to deploy standalone microservices as Linux service
 How to deploy standalone microservices as Windows service
  </description>
    </item>
    
    <item>
      <title>Running Light-4J Application as Linux Service</title>
      <link>https://networknt.github.io/light-4j/devops/linux_service/</link>
      <pubDate>Sat, 07 Jan 2017 08:03:47 -0500</pubDate>
      
      <guid>https://networknt.github.io/light-4j/devops/linux_service/</guid>
      <description>Light-4J application can be easily started as Unix/Linux services using either init.d or systemd given it is packaged as a fatjar.
Installation as an init.d service (System V) If your application is packaged as a fatjar, and youâ€™re not using a custom script, then your application can be used as an init.d service. Simply symlink the jar to init.d to support the standard start, stop, restart and status commands.</description>
    </item>
    
    <item>
      <title>Running Light-4J Application as Windows Service</title>
      <link>https://networknt.github.io/light-4j/devops/windows_service/</link>
      <pubDate>Sat, 07 Jan 2017 08:03:33 -0500</pubDate>
      
      <guid>https://networknt.github.io/light-4j/devops/windows_service/</guid>
      <description>Light-4J is packaged as a fatjar and normally will be running in docker container on production; however, it can be executed on Windows or Linux host machine or VM with the following command.
java -jar filename.jar  For production deployment, you want to make sure that when you host server/VM is restarted, the application will be restarted automatically.
The following describes step-by-step how you can create a Windows service for your Light-4J application or any Java application that can be packaged in a fatjar.</description>
    </item>
    
  </channel>
</rss>